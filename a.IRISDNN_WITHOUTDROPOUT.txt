#1.Import and load data
from sklearn.datasets import load_iris
from tensorflow import keras
iris=load_iris()
x=iris.data
y=iris.target
#2.Split the dataset
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.7,random_state=42)
#3.DNN layer construction
model_DNN=keras.models.Sequential()
#4.Input and hidden layer construction
model_DNN.add(keras.layers.Dense(units=12, activation = "relu",input_shape = x.shape[1:]))
model_DNN.add(keras.layers.Dense(units=10,activation = "relu"))
model_DNN.add(keras.layers.Dense(units=8,activation = "relu" ))
model_DNN.add(keras.layers.Dense(units=6,activation = "relu"))
model_DNN.add(keras.layers.Dense(units=3, activation = "sigmoid"))
model_DNN.summary()
#5. Fit and compile
model_DNN.compile(loss="sparse_categorical_crossentropy",optimizer="adam",metrics="accuracy")
model_DNN.fit(x_train,y_train,epochs=3,batch_size=16)
testloss,testaccuracy=model_DNN.evaluate(x_test,y_test)
print("Test loss = ",testloss)
print("Test accuracy = ",testaccuracy)